@model QuizQpplicationMVC.Models.QuestionModel

@{
    ViewBag.Title = "EditQuestion";
    Layout = "~/Views/Shared/_LayoutAdmin.cshtml";
}

<h2>Edit Question</h2>

@if (ViewBag.error != null)
{
    <div class="alert alert-danger">
        <strong>Error!</strong> @ViewBag.error
    </div>
}

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            <div class=" col-md-offset-2 col-md-10">
                <textarea rows="5" cols="100" name="content" placeholder="Enter question content here...">@Model.content</textarea>
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opA, "Option A:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opA, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opA, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opB, "Option B:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opB, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opB, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opC, "Option C:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opC, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opC, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.opD, "Option D:", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.opD, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.opD, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <label>Answer: </label> @ViewBag.ans
            </div>
            
        </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Update" class="btn btn-success" />
                </div>
            </div>
        </div>
}

<div>
    @Html.ActionLink("Back", "QuestionOfQuizz", new RouteValueDictionary(
                        new { controller = "Admin", action = "QuestionOfQuizz", Id = Convert.ToInt32(TempData["quizz_id"]) }))
</div>
